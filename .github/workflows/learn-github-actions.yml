# ワークフローの名前
name: learn-github-actions
# このワークフローのトリガーを指定
# 'push'を指定すると、リポジトリに変更をプッシュしたり、プルリクエストをマージする度にワークフローが実行される
on: [push]
# このワークフローで実行される、すべてののジョブ
jobs:
  # ジョブ名の定義
  check-bats-version:
    # 最新バージョンのUbuntuで動作するように、ランナーを指定
    runs-on: ubuntu-latest
    # このジョブで実行される、すべてのステップ
    # ネストされた各項目は、個別のアクションもしくはシェルスクリプトを記述する
    steps:
      # usesキーワードは、指定したActionを実行する
      # リポジトリをランナー上にチェックアウト
      - uses: actions/checkout@v2
      # Node.js v14のインストール
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      # runキーワードは、ランナー上コマンドを実行するようジョブに指示する
      # npmでbatsをインストール
      - run: npm install -g bats
      # batsのバージョンを表示
      - run: bats -v
  # 再利用可能なワークフローを呼び出す
  call-reusable-workflow:
    # 再利用するワークフローファイルを指定
    # [所有者]/[リポジトリ]/[パス]/[ファイル名]@[参照]
    uses: dodo-lab/github-actions-sandbox/.github/workflows/reusable-workflow.yml@main
    # 再利用ワークフローへの入力(inputs)
    with:
      username: mona
    # 再利用ワークフローへ渡すシークレット
    # 本来はGitHubのシークレット管理機能を使うべきだが、該当ドキュメントの査読ができてないため、見られても問題ない値を設定
    secrets:
      envPAT: test-secret
  # 再利用可能なワークフローのアウトプットを参照
  ref-reusable-workflow-output:
    runs-on: ubuntu-latest
    # 'call-reusable-workflow'が完了するまで待つ
    needs: call-reusable-workflow
    steps:
      - run: echo ${{needs.call-reusable-workflow.outputs.firstWord}} ${{needs.call-reusable-workflow.outputs.secondWord}}
  context-info:
    runs-on: ubuntu-latest
    needs: check-bats-version
    steps:
      - name: github info
        env:
          GITHUB_CONTEXT: ${{toJson(github)}}
        run: echo ${GITHUB_CONTEXT}
      - name: job info
        env:
          JOB_CONTEXT: ${{toJson(job)}}
        run: echo ${JOB_CONTEXT}
      - name: steps info
        env:
          STEPS_CONTEXT: ${{toJson(steps)}}
        run: echo ${STEPS_CONTEXT}
      - name: runner info
        env:
          RUNNER_CONTEXT: ${{toJson(runner)}}
        run: echo ${RUNNER_CONTEXT}
      - name: needs info
        env:
          NEEDS_CONTEXT: ${{toJson(needs)}}
        run: echo ${NEEDS_CONTEXT}
